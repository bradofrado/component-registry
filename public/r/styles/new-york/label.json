{
  "name": "label",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-label"
  ],
  "files": [
    {
      "path": "ui/label.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as LabelPrimitive from '@radix-ui/react-label'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport { QuestionMarkCircleIcon } from '@heroicons/react/24/outline'\n\nimport { cn } from '@/lib/utils'\nimport { Tooltip, TooltipContent, TooltipTrigger } from './tooltip'\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants> & {\n      tooltip?: React.ReactNode\n    }\n>(({ className, tooltip, ...props }, ref) => (\n  <div className='flex items-center gap-2'>\n    <LabelPrimitive.Root\n      ref={ref}\n      className={cn(labelVariants(), className)}\n      {...props}\n    />\n    {tooltip ? (\n      <Tooltip>\n        <TooltipTrigger asChild>\n          <QuestionMarkCircleIcon className='h-4 w-4' />\n        </TooltipTrigger>\n        <TooltipContent>{tooltip}</TooltipContent>\n      </Tooltip>\n    ) : null}\n  </div>\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n",
      "type": "registry:ui"
    }
  ]
}